DEBUG [paralegal_flow] Arguments: /Users/mithijethwa/.cargo/bin/paralegal-flow --crate-name file_db_example --edition=2021 src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=128 --crate-type bin --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked -C metadata=db3c8ec76ead5a76 -C extra-filename=-db3c8ec76ead5a76 --out-dir /Users/mithijethwa/thesis/paralegal/guide/file-db-example/target/plugin-nightly-2023-08-25/debug/deps -C incremental=/Users/mithijethwa/thesis/paralegal/guide/file-db-example/target/plugin-nightly-2023-08-25/debug/incremental -L dependency=/Users/mithijethwa/thesis/paralegal/guide/file-db-example/target/plugin-nightly-2023-08-25/debug/deps --extern paralegal=/Users/mithijethwa/thesis/paralegal/guide/file-db-example/target/plugin-nightly-2023-08-25/debug/deps/libparalegal-c9f2ca349e9f30f6.dylib --cfg paralegal --sysroot /Users/mithijethwa/.rustup/toolchains/nightly-2023-08-25-aarch64-apple-darwin --cfg paralegal -Zcrate-attr=feature(register_tool) -Zcrate-attr=register_tool(paralegal_flow) -Ztrack-diagnostics
INFO  [paralegal_flow::ana] Handling target process_basic
DEBUG [flowistry_pdg_construction::local_analysis] Dumped debug MIR process_basic.mir
INFO  [flowistry::mir::placeinfo] Starting aliases...
INFO  [flowistry::mir::aliases] Initial places in loan set: 4, total regions 4, definite regions: 1
DEBUG [flowistry::mir::aliases] Initial contains: {
    '?4294967040: {},
    '?5: {
        (
            (*_1),
            Not,
        ),
    },
    '?4: {
        (
            (*_1),
            Not,
        ),
    },
    '?6: {
        (
            (*((*_1).1: &str)),
            Not,
        ),
        (
            (*((*_1).0: &User)),
            Not,
        ),
    },
}
DEBUG [flowistry::mir::aliases] Definite: {
    '?4: (
        UserData<'_>,
        [],
    ),
}
INFO  [flowistry::mir::aliases] Final places in loan set: 15
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::construct]   Data inputs:1 [(DepNode { place: _1, at: CallString(0x10b813940 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::process_basic), location: Start }]), place_pretty: Some(0x10b813980 : "ud"), is_split: false, span: src/main.rs:57:1: 57:32 (#0) }, Operand)]
DEBUG [flowistry_pdg_construction::construct] Node inputs as places _1
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::construct]   Data inputs:9 [(DepNode { place: (*((*_1).1: &str)), at: CallString(0x10b813940 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::process_basic), location: Start }]), place_pretty: Some(0x10b814ec0 : "*(*ud).val"), is_split: false, span: src/main.rs:57:1: 57:32 (#0) }, Operand), (DepNode { place: _1, at: CallString(0x10b813940 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::process_basic), location: Start }]), place_pretty: Some(0x10b813980 : "ud"), is_split: false, span: src/main.rs:57:1: 57:32 (#0) }, Operand), (DepNode { place: ((*_1).1: &str), at: CallString(0x10b813940 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::process_basic), location: Start }]), place_pretty: Some(0x10b814040 : "(*ud).val"), is_split: false, span: src/main.rs:57:1: 57:32 (#0) }, Operand), (DepNode { place: (*((*_1).0: &User)), at: CallString(0x10b813940 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::process_basic), location: Start }]), place_pretty: Some(0x10b814540 : "*(*ud).data"), is_split: true, span: src/main.rs:57:1: 57:32 (#0) }, Operand), (DepNode { place: _1, at: CallString(0x10b813940 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::process_basic), location: Start }]), place_pretty: Some(0x10b813980 : "ud"), is_split: false, span: src/main.rs:57:1: 57:32 (#0) }, Operand), (DepNode { place: ((*_1).0: &User), at: CallString(0x10b813940 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::process_basic), location: Start }]), place_pretty: Some(0x10b814b70 : "(*ud).data"), is_split: false, span: src/main.rs:57:1: 57:32 (#0) }, Operand), (DepNode { place: (*_1), at: CallString(0x10b813940 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::process_basic), location: Start }]), place_pretty: Some(0x10b814500 : "*ud"), is_split: true, span: src/main.rs:57:1: 57:32 (#0) }, Operand), (DepNode { place: _1, at: CallString(0x10b813940 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::process_basic), location: Start }]), place_pretty: Some(0x10b813980 : "ud"), is_split: false, span: src/main.rs:57:1: 57:32 (#0) }, Operand), (DepNode { place: _3, at: CallString(0x11f606f40 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::process_basic), location: Location(bb0[2]) }]), place_pretty: None, is_split: false, span: src/main.rs:65:21: 65:23 (#0) }, Operand)]
DEBUG [flowistry_pdg_construction::construct] Node inputs as places (*((*_1).1: &str))
DEBUG [flowistry_pdg_construction::construct] Node inputs as places _1
DEBUG [flowistry_pdg_construction::construct] (*((*_1).1: &str)) vs _1
DEBUG [flowistry_pdg_construction::construct] p1: PlaceTy { ty: str, variant_index: None } vs p2:PlaceTy { ty: &UserData<'_>, variant_index: None } and we said false
DEBUG [flowistry_pdg_construction::construct] (*((*_1).1: &str)) is not distinct from _1
DEBUG [flowistry_pdg_construction::construct] Node inputs as places ((*_1).1: &str)
DEBUG [flowistry_pdg_construction::construct] _1 vs ((*_1).1: &str)
DEBUG [flowistry_pdg_construction::construct] p1: PlaceTy { ty: &UserData<'_>, variant_index: None } vs p2:PlaceTy { ty: &str, variant_index: None } and we said false
DEBUG [flowistry_pdg_construction::construct] _1 is not distinct from ((*_1).1: &str)
DEBUG [flowistry_pdg_construction::construct] Node inputs as places (*((*_1).0: &User))
DEBUG [flowistry_pdg_construction::construct] _1 vs (*((*_1).0: &User))
DEBUG [flowistry_pdg_construction::construct] p1: PlaceTy { ty: &UserData<'_>, variant_index: None } vs p2:PlaceTy { ty: User, variant_index: None } and we said false
DEBUG [flowistry_pdg_construction::construct] _1 is not distinct from (*((*_1).0: &User))
DEBUG [flowistry_pdg_construction::construct] Node inputs as places _1
DEBUG [flowistry_pdg_construction::construct] (*((*_1).0: &User)) vs _1
DEBUG [flowistry_pdg_construction::construct] p1: PlaceTy { ty: User, variant_index: None } vs p2:PlaceTy { ty: &UserData<'_>, variant_index: None } and we said false
DEBUG [flowistry_pdg_construction::construct] (*((*_1).0: &User)) is not distinct from _1
DEBUG [flowistry_pdg_construction::construct] Node inputs as places ((*_1).0: &User)
DEBUG [flowistry_pdg_construction::construct] (*((*_1).0: &User)) vs ((*_1).0: &User)
DEBUG [flowistry_pdg_construction::construct] p1: PlaceTy { ty: User, variant_index: None } vs p2:PlaceTy { ty: &User, variant_index: None } and we said true
DEBUG [flowistry_pdg_construction::construct]  projDeref vs Deref
DEBUG [flowistry_pdg_construction::construct]  projField(0, &User) vs Field(0, &User)
DEBUG [flowistry_pdg_construction::construct] (*((*_1).0: &User)) is distinct from ((*_1).0: &User)
DEBUG [flowistry_pdg_construction::construct] ((*_1).1: &str) vs ((*_1).0: &User)
DEBUG [flowistry_pdg_construction::construct] p1: PlaceTy { ty: &str, variant_index: None } vs p2:PlaceTy { ty: &User, variant_index: None } and we said false
DEBUG [flowistry_pdg_construction::construct]  projDeref vs Deref
DEBUG [flowistry_pdg_construction::construct]  projField(1, &str) vs Field(1, &str)
DEBUG [flowistry_pdg_construction::construct] ((*_1).1: &str) is not distinct from ((*_1).0: &User)
DEBUG [flowistry_pdg_construction::construct] Node inputs as places (*_1)
DEBUG [flowistry_pdg_construction::construct] (*((*_1).0: &User)) vs (*_1)
DEBUG [flowistry_pdg_construction::construct] p1: PlaceTy { ty: User, variant_index: None } vs p2:PlaceTy { ty: UserData<'_>, variant_index: None } and we said false
DEBUG [flowistry_pdg_construction::construct]  projDeref vs Deref
DEBUG [flowistry_pdg_construction::construct] (*((*_1).0: &User)) is not distinct from (*_1)
DEBUG [flowistry_pdg_construction::construct] Node inputs as places _1
DEBUG [flowistry_pdg_construction::construct] (*((*_1).0: &User)) vs _1
DEBUG [flowistry_pdg_construction::construct] p1: PlaceTy { ty: User, variant_index: None } vs p2:PlaceTy { ty: &UserData<'_>, variant_index: None } and we said false
DEBUG [flowistry_pdg_construction::construct] (*((*_1).0: &User)) is not distinct from _1
DEBUG [flowistry_pdg_construction::construct] Node inputs as places _3
DEBUG [flowistry_pdg_construction::construct] (*((*_1).0: &User)) vs _3
DEBUG [flowistry_pdg_construction::construct] p1: PlaceTy { ty: User, variant_index: None } vs p2:PlaceTy { ty: &UserData<'_>, variant_index: None } and we said false
DEBUG [flowistry_pdg_construction::construct] (*((*_1).0: &User)) is not distinct from _3
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::construct]   Data inputs:1 [(DepNode { place: _3, at: CallString(0x10b813fe0 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::process_basic), location: Location(bb0[3]) }]), place_pretty: None, is_split: false, span: src/main.rs:65:5: 65:24 (#0) }, Argument(0))]
DEBUG [flowistry_pdg_construction::construct] Node inputs as places _3
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::construct]   Data inputs:0 []
INFO  [paralegal_flow] All elems walked
Analysis finished with timing: Rustc: 148ms 178μs Flowistry: 1ms 113μs Conversion: 333μs 791ns Serialization: 1ms 96μs 
2025-04-27T00:18:00.330Z DEBUG [paralegal_spdg::traverse] DFS: Incoming edge from NodeIndex(1) to NodeIndex(2)
2025-04-27T00:18:00.331Z DEBUG [paralegal_spdg::traverse] DFS: Incoming edge from NodeIndex(10) to NodeIndex(2)
2025-04-27T00:18:00.331Z DEBUG [paralegal_spdg::traverse] DFS: Incoming edge from NodeIndex(9) to NodeIndex(2)
2025-04-27T00:18:00.331Z DEBUG [paralegal_spdg::traverse] DFS: Incoming edge from NodeIndex(8) to NodeIndex(2)
2025-04-27T00:18:00.331Z DEBUG [paralegal_spdg::traverse] DFS: Incoming edge from NodeIndex(7) to NodeIndex(2)
2025-04-27T00:18:00.331Z DEBUG [paralegal_spdg::traverse] DFS: Incoming edge from NodeIndex(6) to NodeIndex(2)
2025-04-27T00:18:00.331Z DEBUG [paralegal_spdg::traverse] DFS: Incoming edge from NodeIndex(4) to NodeIndex(2)
Policy successful
