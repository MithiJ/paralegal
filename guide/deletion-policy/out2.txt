DEBUG [paralegal_flow] Arguments: /Users/mithijethwa/.cargo/bin/paralegal-flow --crate-name file_db_example --edition=2021 src/main.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --diagnostic-width=109 --crate-type bin --emit=dep-info,metadata -C embed-bitcode=no -C debuginfo=2 -C split-debuginfo=unpacked -C metadata=db3c8ec76ead5a76 -C extra-filename=-db3c8ec76ead5a76 --out-dir /Users/mithijethwa/thesis/paralegal/guide/file-db-example/target/plugin-nightly-2023-08-25/debug/deps -C incremental=/Users/mithijethwa/thesis/paralegal/guide/file-db-example/target/plugin-nightly-2023-08-25/debug/incremental -L dependency=/Users/mithijethwa/thesis/paralegal/guide/file-db-example/target/plugin-nightly-2023-08-25/debug/deps --extern paralegal=/Users/mithijethwa/thesis/paralegal/guide/file-db-example/target/plugin-nightly-2023-08-25/debug/deps/libparalegal-c9f2ca349e9f30f6.dylib --cfg paralegal --sysroot /Users/mithijethwa/.rustup/toolchains/nightly-2023-08-25-aarch64-apple-darwin --cfg paralegal -Zcrate-attr=feature(register_tool) -Zcrate-attr=register_tool(paralegal_flow) -Ztrack-diagnostics
INFO  [paralegal_flow::ana] Handling target delete
DEBUG [flowistry_pdg_construction::local_analysis] Dumped debug MIR delete.mir
INFO  [flowistry::mir::placeinfo] Starting aliases...
INFO  [flowistry::mir::aliases] Initial places in loan set: 0, total regions 1, definite regions: 2
DEBUG [flowistry::mir::aliases] Initial contains: {
    '?4294967040: {},
}
DEBUG [flowistry::mir::aliases] Definite: {
    '?5: (
        str,
        [],
    ),
    '?3: (
        str,
        [],
    ),
}
INFO  [flowistry::mir::aliases] Final places in loan set: 0
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[4]: _5 = const "dummy1", definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb0[4]
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[5]: _4 = &(*_5), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb0[5]
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[6]: _3 = <str as std::string::ToString>::to_string(move _4) -> [return: bb1, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] 1 inputs flowing into this arg - definitely case
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb0[6]
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[6]: _3 , possibly
DEBUG [flowistry_pdg_construction::mutation] 1 is the number of values reachable here!!
DEBUG [flowistry_pdg_construction::mutation] THIS IS THE MOST LIKELY SPOT. if argmut is a component of arg??
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb0[6]
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[4]: _8 = const "dummy2", definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb1[4]
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[5]: _7 = &(*_8), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb1[5]
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[6]: _6 = <str as std::string::ToString>::to_string(move _7) -> [return: bb2, unwind: bb15]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] 1 inputs flowing into this arg - definitely case
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb1[6]
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[6]: _6 , possibly
DEBUG [flowistry_pdg_construction::mutation] 1 is the number of values reachable here!!
DEBUG [flowistry_pdg_construction::mutation] THIS IS THE MOST LIKELY SPOT. if argmut is a component of arg??
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb1[6]
DEBUG [flowistry_pdg_construction::mutation] Checking bb2[1]: _2 = Image { name1: move _3, name2: move _6 }, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::mutation] Another use of aggregate kind adt in mod mut visitor now
DEBUG [flowistry_pdg_construction::mutation] Checking bb2[1]: (_2.0: std::string::String) = move _3, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb2[1]
DEBUG [flowistry_pdg_construction::mutation] Checking bb2[1]: (_2.1: std::string::String) = move _6, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb2[1]
DEBUG [flowistry_pdg_construction::mutation] Checking bb2[2]: drop(_6) -> [return: bb3, unwind: bb15]
DEBUG [flowistry_pdg_construction::mutation] Checking bb3[1]: drop(_3) -> [return: bb4, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Checking bb4[6]: _10 = const _, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb4[6]
DEBUG [flowistry_pdg_construction::mutation] Checking bb4[7]: switchInt(move _10) -> [0: bb6, otherwise: bb5]
DEBUG [flowistry_pdg_construction::mutation] Checking bb6[0]: _9 = move (_2.1: std::string::String), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb6[0]
DEBUG [flowistry_pdg_construction::mutation] Checking bb6[1]: goto -> bb7
DEBUG [flowistry_pdg_construction::mutation] Checking bb5[0]: _9 = move (_2.0: std::string::String), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb5[0]
DEBUG [flowistry_pdg_construction::mutation] Checking bb5[1]: goto -> bb7
DEBUG [flowistry_pdg_construction::mutation] Checking bb7[3]: _11 = move _9, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb7[3]
DEBUG [flowistry_pdg_construction::mutation] Checking bb7[4]: _0 = delete_sink(move _11) -> [return: bb8, unwind: bb12]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] 1 inputs flowing into this arg - definitely case
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb7[4]
DEBUG [flowistry_pdg_construction::mutation] Checking bb7[4]: _0 , possibly
DEBUG [flowistry_pdg_construction::mutation] 1 is the number of values reachable here!!
DEBUG [flowistry_pdg_construction::mutation] THIS IS THE MOST LIKELY SPOT. if argmut is a component of arg??
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb7[4]
DEBUG [flowistry_pdg_construction::mutation] Checking bb8[1]: drop(_9) -> [return: bb9, unwind: bb14]
DEBUG [flowistry_pdg_construction::mutation] Checking bb9[1]: drop(_2) -> [return: bb10, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Checking bb10[1]: drop(_1) -> [return: bb11, unwind: bb17]
DEBUG [flowistry_pdg_construction::mutation] Checking bb11[0]: return
DEBUG [flowistry_pdg_construction::mutation] Checking bb12[0]: drop(_11) -> [return: bb13, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb13[0]: drop(_9) -> [return: bb14, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb14[0]: drop(_2) -> [return: bb16, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb15[0]: drop(_3) -> [return: bb16, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb16[0]: drop(_1) -> [return: bb17, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb17[0]: resume
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[4]: _5 = const "dummy1", definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::construct] bb0[4]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_5) with inputs Unresolved { places: [] } at bb0[4]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::construct] 0 is how many edges we have
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[4]: _5 = const "dummy1", definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb0[4]
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[5]: _4 = &(*_5), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::construct] bb0[5]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_4) with inputs Unresolved { places: [(_5, None)] } at bb0[5]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _5
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node _5 @ delete::bb0[4]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb0[4] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb0[5]: _4 = &(*_5), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb0[5]
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[6]: _3 = <str as std::string::ToString>::to_string(move _4) -> [return: bb1, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] 1 inputs flowing into this arg - definitely case
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_4) with inputs Unresolved { places: [(_4, None)] } at bb0[6]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _4
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node _4 @ delete::bb0[5]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb0[5] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb0[6]: _3 , possibly
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[6]: _3 = <str as std::string::ToString>::to_string(move _4) -> [return: bb1, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] 1 inputs flowing into this arg - definitely case
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb0[6]
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[6]: _3 , possibly
DEBUG [flowistry_pdg_construction::mutation] 1 is the number of values reachable here!!
DEBUG [flowistry_pdg_construction::mutation] THIS IS THE MOST LIKELY SPOT. if argmut is a component of arg??
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb0[6]
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[6]: _3 = <str as std::string::ToString>::to_string(move _4) -> [return: bb1, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] Checking bb0[6]: _3 , possibly
DEBUG [flowistry_pdg_construction::mutation] 1 is the number of values reachable here!!
DEBUG [flowistry_pdg_construction::mutation] THIS IS THE MOST LIKELY SPOT. if argmut is a component of arg??
DEBUG [flowistry_pdg_construction::construct] bb0[6]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_3) with inputs Unresolved { places: [(_4, Some(0))] } at bb0[6]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _4
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node _4 @ delete::bb0[6]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb0[6] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb16[0]: drop(_1) -> [return: bb17, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb16[0]: drop(_1) -> [return: bb17, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb16[0]: drop(_1) -> [return: bb17, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb17[0]: resume
DEBUG [flowistry_pdg_construction::mutation] Checking bb17[0]: resume
DEBUG [flowistry_pdg_construction::mutation] Checking bb17[0]: resume
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[4]: _8 = const "dummy2", definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::construct] bb1[4]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_8) with inputs Unresolved { places: [] } at bb1[4]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::construct] 0 is how many edges we have
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[4]: _8 = const "dummy2", definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb1[4]
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[5]: _7 = &(*_8), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::construct] bb1[5]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_7) with inputs Unresolved { places: [(_8, None)] } at bb1[5]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _8
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node _8 @ delete::bb1[4]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb1[4] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb1[5]: _7 = &(*_8), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb1[5]
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[6]: _6 = <str as std::string::ToString>::to_string(move _7) -> [return: bb2, unwind: bb15]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] 1 inputs flowing into this arg - definitely case
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_7) with inputs Unresolved { places: [(_7, None)] } at bb1[6]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _7
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node _7 @ delete::bb1[5]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb1[5] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb1[6]: _6 , possibly
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[6]: _6 = <str as std::string::ToString>::to_string(move _7) -> [return: bb2, unwind: bb15]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] 1 inputs flowing into this arg - definitely case
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb1[6]
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[6]: _6 , possibly
DEBUG [flowistry_pdg_construction::mutation] 1 is the number of values reachable here!!
DEBUG [flowistry_pdg_construction::mutation] THIS IS THE MOST LIKELY SPOT. if argmut is a component of arg??
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb1[6]
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[6]: _6 = <str as std::string::ToString>::to_string(move _7) -> [return: bb2, unwind: bb15]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] Checking bb1[6]: _6 , possibly
DEBUG [flowistry_pdg_construction::mutation] 1 is the number of values reachable here!!
DEBUG [flowistry_pdg_construction::mutation] THIS IS THE MOST LIKELY SPOT. if argmut is a component of arg??
DEBUG [flowistry_pdg_construction::construct] bb1[6]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_6) with inputs Unresolved { places: [(_7, Some(0))] } at bb1[6]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _7
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node _7 @ delete::bb1[6]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb1[6] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb15[0]: drop(_3) -> [return: bb16, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb15[0]: drop(_3) -> [return: bb16, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb15[0]: drop(_3) -> [return: bb16, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb2[1]: _2 = Image { name1: move _3, name2: move _6 }, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::mutation] Another use of aggregate kind adt in mod mut visitor now
DEBUG [flowistry_pdg_construction::mutation] Checking bb2[1]: (_2.0: std::string::String) = move _3, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::construct] bb2[1]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left((_2.0: std::string::String)) with inputs Unresolved { places: [(_3, None)] } at bb2[1]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _3
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node _3 @ delete::bb0[6]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb0[6] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb2[1]: (_2.1: std::string::String) = move _6, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::construct] bb2[1]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left((_2.1: std::string::String)) with inputs Unresolved { places: [(_6, None)] } at bb2[1]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _6
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node _6 @ delete::bb1[6]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb1[6] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb2[1]: _2 = Image { name1: move _3, name2: move _6 }, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::mutation] Another use of aggregate kind adt in mod mut visitor now
DEBUG [flowistry_pdg_construction::mutation] Checking bb2[1]: (_2.0: std::string::String) = move _3, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb2[1]
DEBUG [flowistry_pdg_construction::mutation] Checking bb2[1]: (_2.1: std::string::String) = move _6, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb2[1]
DEBUG [flowistry_pdg_construction::mutation] Checking bb2[2]: drop(_6) -> [return: bb3, unwind: bb15]
DEBUG [flowistry_pdg_construction::mutation] Checking bb2[2]: drop(_6) -> [return: bb3, unwind: bb15]
DEBUG [flowistry_pdg_construction::mutation] Checking bb2[2]: drop(_6) -> [return: bb3, unwind: bb15]
DEBUG [flowistry_pdg_construction::mutation] Checking bb3[1]: drop(_3) -> [return: bb4, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Checking bb3[1]: drop(_3) -> [return: bb4, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Checking bb3[1]: drop(_3) -> [return: bb4, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Checking bb4[6]: _10 = const _, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::construct] bb4[6]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_10) with inputs Unresolved { places: [] } at bb4[6]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::construct] 0 is how many edges we have
DEBUG [flowistry_pdg_construction::mutation] Checking bb4[6]: _10 = const _, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb4[6]
DEBUG [flowistry_pdg_construction::construct] Hitting a case of definitely mutated for synthetic assignment at terminator
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_10) with inputs Unresolved { places: [(_10, None)] } at bb4[7]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _10
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node _10 @ delete::bb4[6]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb4[6] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb4[7]: switchInt(move _10) -> [0: bb6, otherwise: bb5]
DEBUG [flowistry_pdg_construction::mutation] Checking bb4[7]: switchInt(move _10) -> [0: bb6, otherwise: bb5]
DEBUG [flowistry_pdg_construction::mutation] Checking bb5[0]: _9 = move (_2.0: std::string::String), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::construct] bb5[0]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_9) with inputs Unresolved { places: [((_2.0: std::string::String), None)] } at bb5[0]
DEBUG [flowistry_pdg_construction::local_analysis] Is this a possibly case? bb4[7] => _10
DEBUG [flowistry_pdg_construction::construct]   Found control inputs [(DepNode { place: _10, at: CallString(0x150f65ea0 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::delete), location: Location(bb4[7]) }]), place_pretty: None, is_split: false, span: src/main.rs:26:21: 26:39 (#0) }, DepEdge { kind: Control, at: CallString(0x150f65ea0 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::delete), location: Location(bb4[7]) }]), source_use: Operand, target_use: Assign, tentativeness: Certain })]
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place (_2.0: std::string::String)
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node img.name1 @ delete::bb2[1]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb2[1] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb5[0]: _9 = move (_2.0: std::string::String), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb5[0]
DEBUG [flowistry_pdg_construction::mutation] Checking bb5[1]: goto -> bb7
DEBUG [flowistry_pdg_construction::mutation] Checking bb5[1]: goto -> bb7
DEBUG [flowistry_pdg_construction::mutation] Checking bb5[1]: goto -> bb7
DEBUG [flowistry_pdg_construction::mutation] Checking bb7[3]: _11 = move _9, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::construct] bb7[3]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_11) with inputs Unresolved { places: [(_9, None)] } at bb7[3]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _9
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 2 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node target @ delete::bb6[0]
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node target @ delete::bb5[0]
DEBUG [flowistry_pdg_construction::construct] 2 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb6[0] seen: 0 

DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb5[0] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb7[3]: _11 = move _9, definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb7[3]
DEBUG [flowistry_pdg_construction::mutation] Checking bb7[4]: _0 = delete_sink(move _11) -> [return: bb8, unwind: bb12]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] 1 inputs flowing into this arg - definitely case
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_11) with inputs Unresolved { places: [(_11, None)] } at bb7[4]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _11
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node _11 @ delete::bb7[3]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb7[3] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb7[4]: _0 , possibly
DEBUG [flowistry_pdg_construction::mutation] Checking bb7[4]: _0 = delete_sink(move _11) -> [return: bb8, unwind: bb12]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] 1 inputs flowing into this arg - definitely case
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb7[4]
DEBUG [flowistry_pdg_construction::mutation] Checking bb7[4]: _0 , possibly
DEBUG [flowistry_pdg_construction::mutation] 1 is the number of values reachable here!!
DEBUG [flowistry_pdg_construction::mutation] THIS IS THE MOST LIKELY SPOT. if argmut is a component of arg??
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb7[4]
DEBUG [flowistry_pdg_construction::mutation] Checking bb7[4]: _0 = delete_sink(move _11) -> [return: bb8, unwind: bb12]
DEBUG [flowistry_pdg_construction::mutation] Combine on args!
DEBUG [flowistry_pdg_construction::mutation] Checking bb7[4]: _0 , possibly
DEBUG [flowistry_pdg_construction::mutation] 1 is the number of values reachable here!!
DEBUG [flowistry_pdg_construction::mutation] THIS IS THE MOST LIKELY SPOT. if argmut is a component of arg??
DEBUG [flowistry_pdg_construction::construct] bb7[4]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_0) with inputs Unresolved { places: [(_11, Some(0))] } at bb7[4]
DEBUG [flowistry_pdg_construction::construct]   Found control inputs []
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place _11
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node _11 @ delete::bb7[4]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb7[4] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb12[0]: drop(_11) -> [return: bb13, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb12[0]: drop(_11) -> [return: bb13, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb12[0]: drop(_11) -> [return: bb13, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb13[0]: drop(_9) -> [return: bb14, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb13[0]: drop(_9) -> [return: bb14, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb13[0]: drop(_9) -> [return: bb14, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb14[0]: drop(_2) -> [return: bb16, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb14[0]: drop(_2) -> [return: bb16, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb14[0]: drop(_2) -> [return: bb16, unwind terminate]
DEBUG [flowistry_pdg_construction::mutation] Checking bb8[1]: drop(_9) -> [return: bb9, unwind: bb14]
DEBUG [flowistry_pdg_construction::mutation] Checking bb8[1]: drop(_9) -> [return: bb9, unwind: bb14]
DEBUG [flowistry_pdg_construction::mutation] Checking bb8[1]: drop(_9) -> [return: bb9, unwind: bb14]
DEBUG [flowistry_pdg_construction::mutation] Checking bb9[1]: drop(_2) -> [return: bb10, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Checking bb9[1]: drop(_2) -> [return: bb10, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Checking bb9[1]: drop(_2) -> [return: bb10, unwind: bb16]
DEBUG [flowistry_pdg_construction::mutation] Checking bb10[1]: drop(_1) -> [return: bb11, unwind: bb17]
DEBUG [flowistry_pdg_construction::mutation] Checking bb10[1]: drop(_1) -> [return: bb11, unwind: bb17]
DEBUG [flowistry_pdg_construction::mutation] Checking bb10[1]: drop(_1) -> [return: bb11, unwind: bb17]
DEBUG [flowistry_pdg_construction::mutation] Checking bb11[0]: return
DEBUG [flowistry_pdg_construction::mutation] Checking bb11[0]: return
DEBUG [flowistry_pdg_construction::mutation] Checking bb11[0]: return
DEBUG [flowistry_pdg_construction::mutation] Checking bb6[0]: _9 = move (_2.1: std::string::String), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::construct] bb6[0]
DEBUG [flowistry_pdg_construction::construct] Registering mutation to Left(_9) with inputs Unresolved { places: [((_2.1: std::string::String), None)] } at bb6[0]
DEBUG [flowistry_pdg_construction::local_analysis] Is this a possibly case? bb4[7] => _10
DEBUG [flowistry_pdg_construction::construct]   Found control inputs [(DepNode { place: _10, at: CallString(0x150f65ea0 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::delete), location: Location(bb4[7]) }]), place_pretty: None, is_split: false, span: src/main.rs:26:21: 26:39 (#0) }, DepEdge { kind: Control, at: CallString(0x150f65ea0 : [GlobalLocation { function: DefId(0:11 ~ file_db_example[7cc1]::delete), location: Location(bb4[7]) }]), source_use: Operand, target_use: Assign, tentativeness: Certain })]
DEBUG [flowistry_pdg_construction::local_analysis] Finding inputs for place (_2.1: std::string::String)
DEBUG [flowistry_pdg_construction::local_analysis] Potentially found tentativeness in multiple last mutations?? for some alias
DEBUG [flowistry_pdg_construction::local_analysis] At the end of data_inputs, for conflict we have 1 last locations
DEBUG [flowistry_pdg_construction::local_analysis] this is conflicting node img.name2 @ delete::bb2[1]
DEBUG [flowistry_pdg_construction::construct] 1 is how many edges we have
DEBUG [flowistry_pdg_construction::construct] At locationdelete::bb2[1] seen: 0 

DEBUG [flowistry_pdg_construction::mutation] Checking bb6[0]: _9 = move (_2.1: std::string::String), definitely
DEBUG [flowistry_pdg_construction::mutation] Handling some special rvalues
DEBUG [flowistry_pdg_construction::local_analysis] In local analysis bb6[0]
DEBUG [flowistry_pdg_construction::mutation] Checking bb6[1]: goto -> bb7
DEBUG [flowistry_pdg_construction::mutation] Checking bb6[1]: goto -> bb7
DEBUG [flowistry_pdg_construction::mutation] Checking bb6[1]: goto -> bb7
DEBUG [flowistry_pdg_construction::mutation] Checking bb11[0]: return
DEBUG [flowistry_pdg_construction::local_analysis] found sth tentative!
DEBUG [flowistry_pdg_construction::local_analysis] source is RETURN @ delete::bb7[4]
DEBUG [flowistry_pdg_construction::local_analysis] dst is RETURN @ delete::end
INFO  [paralegal_flow] All elems walked
Analysis finished with timing: Rustc: 251ms 339μs Flowistry: 31ms 730μs Conversion: 590μs 167ns Serialization: 1ms 49μs 
Graph loaded.
Policy successful
